<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>javascript - tag - Arif Pehlivan</title>
        <link>http://www.arifpehlivan.com/tags/javascript/</link>
        <description>javascript - tag - Arif Pehlivan</description>
        <generator>Hugo -- gohugo.io</generator><language>tr</language><managingEditor>m.arifpehlivan@gmail.com (Arif Pehlivan)</managingEditor>
            <webMaster>m.arifpehlivan@gmail.com (Arif Pehlivan)</webMaster><lastBuildDate>Wed, 20 Jan 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.arifpehlivan.com/tags/javascript/" rel="self" type="application/rss+xml" /><item>
    <title>React.js ve Docker</title>
    <link>http://www.arifpehlivan.com/posts/react-docker/</link>
    <pubDate>Wed, 20 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>http://www.arifpehlivan.com/posts/react-docker/</guid>
    <description><![CDATA[<p>Merhaba arkadaşlar bu yazımda bir react js uygulamasının nasıl docker ile çalışabilir hale getirilmesini inceleyeceğiz.</p>
<p>İncelemeye başlamadan önce react ve docker hakkında bilgisi olmayan arkadaşlar aşağıdaki linklerden react.js ve docker hakkında detaylı bilgiye ulaşabilirler. Docker uygulamasının malesef türkçe dil desteğini bulamadım. O yüzden docker hakkında biraz konuşalım.</p>
<p><a href="https://tr.reactjs.org/" target="_blank" rel="noopener noreffer">React.js</a></p>
<p><a href="https://www.docker.com/" target="_blank" rel="noopener noreffer">Docker</a></p>
<h2 id="docker-nedir">Docker nedir?</h2>
<p>Docker geliştirdiğimiz uygulamalarımızı server bağımlılığı olmadan istediğimiz ortamda yada bilgisayarda çalıştırmamıza yarayan bir sistemdir.Dockerize edilmiş bir uygulamayı kendi local makinemizde çalıştırmak için dockerı bilgisayarımıza indirmeliyiz.</p>
<h2 id="docker-terimleri">Docker Terimleri</h2>
<p>Bu başlıkda docker da kullanılan terimleri basit bir şekilde açıklayacağız. Tüm terimlerin ingilizce karşılıklarına <a href="https://docs.docker.com/glossary/" target="_blank" rel="noopener noreffer">buradan</a> erişebilirsiniz.</p>
<p><strong>DockerFile :</strong> Bir uygulamanın docker ile çalışabilir hale getirilmesi için konfigürasyonların yapıldığı ve komutların tutulduğu text dosyasıdır.</p>
<p><strong>build :</strong> Oluşturulmuş olan DockerFile ların docker sisteminde çalıştırılabilir bir image dönüştürülmesini sağlayan komuttur.</p>
<p>Örnek docker build komutu.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker build -t uygulama_adı:versiyonunuz .
</code></pre></div><p><strong>image :</strong> Docker ile çalışabilir hale getirilmiş uygulama, sistem vb. Sisteminizdeki docker imagelerini aşağıdaki komut ile listeleyebilirsiniz.</p>
<p>Bu komut dan çıktı görmek istiyorsanız bilgisayarınızda dockerın çalıştığından emin olmalısınız.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker image ls
</code></pre></div><p><strong>container:</strong> Docker imagelerinin çalıştırılması için gerekli olan birim. Docker imagelerinde run komutunu çalıştırdıkdan sonra otomatik olarak her image için bir container oluşturulur.
Sisteminizdeki çalışan docker containerlarını aşağıdaki komut ile listeleyebilirsiniz.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker container ls
</code></pre></div><p><strong>Dockerize :</strong> Bir uygulamanın docker imagine dönüştürülme sürecidir. Internette bu terim ile çok karşılaşabilirsiniz.</p>
<h2 id="docker-desktopın-kurulması">Docker Desktop&rsquo;ın kurulması</h2>
<p>Docker desktop uygulası local bilgisayarlarımızın dockerized edilmiş uygulamaların çalıştırılmasına yardım etmektedir. <a href="https://www.docker.com/get-started" target="_blank" rel="noopener noreffer">Buradan</a> indirebilirsiniz.</p>
<h2 id="docker-101in-öğrenilmesi">Docker 101&rsquo;in öğrenilmesi</h2>
<p>Docker hakkında bilgi sahibi değilseniz ve temel ingilizceniz varsa <a href="https://www.docker.com/101-tutorial" target="_blank" rel="noopener noreffer">buradaki</a> linkten docker playground uygulamasına gidip temel komutları öğrenebilirsiniz. Uygulama hem öğretirken hemde eğlendirmektedir. 😊</p>
<h2 id="react-uygulamamızın-dockerize-edilmesi">React Uygulamamızın dockerize edilmesi</h2>
<p>Bir uygulamanın docker üzerinde çalışmasını sağlamak için öncelikle gereksinimlerini iyi belirlememiz gerekmektedir.</p>
<p>Bu yazıda biz sadece react js uygulamasının dockerize edilmesini işleyeceğimizden veritabanı vb gibi gereksinimlerimiz olmayacaktır.</p>
<h3 id="gereksinimler">Gereksinimler</h3>
<ol>
<li>Node.js (Javascript uygulamamızın çalışması için)</li>
</ol>
<h3 id="dockerin-hubdan-gereksinimlerin-bulunması">Dockerin Hub&rsquo;dan gereksinimlerin bulunması</h3>
<p><strong>Docker hub</strong>, docker imagelerinin public/private olarak tutulduğu sistemdir. <a href="https://hub.docker.com/_/node" target="_blank" rel="noopener noreffer">Buradan</a> docker hub daki node js versiyonlarına erişebilirsiniz.</p>
<h3 id="dockerfile-oluşturulması">DockerFile oluşturulması</h3>
<p>Gereksinimlerimizi belirledikden sonra uygulamamızda DockerFile&rsquo;imizi oluşturabiliriz.</p>
<p>Projenizin ana dosyasında(main folder) <strong>Dockerfile</strong> adında bir dosya oluşturmalıyız.</p>
<p>Eğer Visual Studio code kullanıyorsanız ücretsiz docker pluginini entegre edip kolaylıkla yanlış yazımları yada süresi geçmiş komutları görebilirsiniz.</p>
<p>Kullandığım docker plugini <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker">https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker</a></p>
<h3 id="node-js-versiyona-karar-verilmesi">Node js versiyona karar verilmesi</h3>
<p>Uygulamamızın hangi node.js versiyon üzerinde çalıştığını ögrenmek için terminal üzerinden aşağıdaki komutu çalıştırabilirsiniz.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">node --version
</code></pre></div><p>Ardından çalisan versiyonunuza uygun LTS(latest stable version) u bulup Dockerfile&rsquo;nızda ki imageinizin versiyonunu ayarlayabilirsiniz.
Slim versiyon kullanırsanız docker imagenizin boyutu küçük olacaktır. Fakat içeriğinde bazı komutları bulamayabilirsiniz.</p>
<script type="application/javascript" src="https://gist.github.com/mrpehlivan/e0a723f35368126a20a8af7ad1d54d0b.js"></script>

<p>Node versiyonları ile alakalı daha çok bilgi almak için github da <a href="https://github.com/nodejs/docker-node#nodeversion" target="_blank" rel="noopener noreffer">bu sayfayı</a> ziyaret edebilirsiniz.</p>
<h3 id="dockerfileın-derlenmesi-ve-çalıştırılması">Dockerfile&rsquo;ın derlenmesi ve çalıştırılması</h3>
<p>Aşağıdaki komut ile docker file derleyebilirsiniz.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker build -t projeAdı:versiyon -f Dockerfile .
</code></pre></div><p>Derleme işleminden sonra aşağıdaki komut ile uygulamanızı çalıştırabilirsiniz.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker run -it -p 3000:3000 projeAdı:versiyon
</code></pre></div><p>Bu işlemden sonra localhost:3000 adresinde uygulamanızın çalıştığını kontrol edebilirsiniz.</p>
<p>Kolay gelsin 🤞</p>
]]></description>
</item><item>
    <title>React Js ile Facebook Login Entegrasyonu</title>
    <link>http://www.arifpehlivan.com/posts/react-login/</link>
    <pubDate>Thu, 18 Jan 2018 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>http://www.arifpehlivan.com/posts/react-login/</guid>
    <description><![CDATA[<p><strong>React Js ile Facebook Login Entegrasyonu</strong></p>
<p>Uygulamalarda kullanıcı sayısını arttırabilmek için sosyal medya
bağlantılarının yapılması günümüzde büyük önem taşımaktadır. Bu yazıda
<a href="https://reactjs.org/" target="_blank" rel="noopener noreffer">React.js</a>
uygulamamıza<a href="https://www.facebook.com/" target="_blank" rel="noopener noreffer">Facebook</a>’u nasıl entegre
edebileceğimizi göreceğiz.</p>
<p>Entegrasyon yapılırken Facebook’un sağlamış olduğu <a href="https://developers.facebook.com/docs/javascript" target="_blank" rel="noopener noreffer">javascript
sdk</a> dan
yararlanılmıştır.</p>
<p><strong>Facebook Software Development Kit (SDK) ‘in yüklenmesi</strong></p>
<p>Uygulamamızda componentDidMount içerisinde sdk nın sağladığı
Facebook.init methodu ile facebook sdk projeye yüklenir.<br>
FB.init methodu içerisinde 4 adet parametre sayesinde sdk ayarları
yapılmaktadır. Bunlar ;</p>
<p><strong>appId</strong> : Entegre edilen uygulama için Facebook tarafından verilen id.
Aşağıda nasıl oluşturulacağı ile ilgili bilgilendirilme yapılmıştır.<br>
<strong>version</strong> : Entegre olunan sdk versiyonu.<br>
<strong>cookie</strong> : Cookilere izin verilip/verilmeyeceğini belirler.<br>
<strong>xfbml</strong> : Yüklenildiği sayfa üzerinde sosyal pluginlere izin
verilip/verilmeyeceğini belirler.</p>
<p><strong>Nasıl application id oluşturulur ?</strong></p>
<p>Facebook ile entegrasyon yapabilmek için öncelikle bu
<a href="https://developers.facebook.com/apps/" target="_blank" rel="noopener noreffer">linkden</a> entegre edilecek
uygulama için bir uygulama id si alınmalıdır.<br>
<strong>Add a New App</strong> butonuna (sağ üst tarafda) tıklayıp bilgileri
girdikten sonra facebook bizi otomatik olarak hangi entegrasyonları
yapabileceğimizi gösteren bir sayfaya yönlendirir.</p>
<p>Açılan bu sayfada sol üst tarafda bulunan <strong>Dashboard</strong> sekmesine
tıkladığınız zaman uygulamamıza ait <strong>version</strong> ,<strong>application</strong> id ve
<strong>application secret</strong>değerlerine ulaşabiliriz.</p>
<p>Biz burada facebook login entegrasyonu yaptığımız için Facebook Login
quick startına tıklayıp ordan entegrasyonu gerçekleştireceğiz.</p>
<p><strong>Facebook SDK üzerinden login methodunun çağırılması</strong></p>
<p><em>componentDidMount</em> methodu içerisinde sdkı yükledikten sonra Facebook’a
login isteğinde bulunabiliriz.Bunun için window objesine yüklemiş
olduğumuz FB objesi üzerinden login methodunu çağıracağız.</p>
<p>FB.login methodunu ilk parametre olarak callbackMethod ikinci parametre
olarak da login olacak olan kullanıcının hangi bilgileri isteniliyorsa
onlar <strong>scope</strong> objesi içerisinde tanımlanır.<br>
Aşağıdaki kod örneğinde kullanıcının email adresi istenmiştir.</p>
<p><a href="https://developers.facebook.com/docs/facebook-login/permissions" target="_blank" rel="noopener noreffer">Bu
linkden</a>
scope üzerinde hangi dataların çekilebileceğini görebilirsiniz.</p>
<p>Bu işlemlerin sonucunda aşağıdaki kod örneklerinden yararlanarak artık
uygulamanızı facebook login ile entegre etmiş olacaksınız.</p>
<p><strong>Kod Örnekleri</strong></p>
<p><em><strong>FB.login methodunun çağırılması :</strong></em></p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">statusChangeCallback</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>   
    <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="err">‘</span><span class="nx">connected</span><span class="err">’</span><span class="p">)</span> <span class="p">{</span>     
        <span class="kr">const</span> <span class="nx">socialData</span> <span class="o">=</span> <span class="p">{</span> 
            <span class="nx">accessToken</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">authResponse</span><span class="p">.</span><span class="nx">accessToken</span><span class="p">,</span>
            <span class="nx">expiresIn</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">authResponse</span><span class="p">.</span><span class="nx">expiresIn</span><span class="p">,</span>
            <span class="nx">signedRequest</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">authResponse</span><span class="p">.</span><span class="nx">signedRequest</span><span class="p">,</span>
            <span class="nx">userID</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">authResponse</span><span class="p">.</span><span class="nx">userID</span>     
    <span class="p">};</span>  
         <span class="c1">//Başarılı login   } else if (response.status === ‘not_authorized’) {   // Kullanıcı login oldu, fakat uygulamanıza erişim izni yok   } else {   // Login olunamadı   } } window.FB.login(this.statusChangeCallback, { scope: ‘email,public_profile’ });
</span></code></pre></div><p><em><strong>SDK nın yüklenmesi</strong></em></p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js">
 <span class="nx">componentDidMount</span><span class="p">()</span> <span class="p">{</span>   <span class="c1">// Load the SDK asynchronously   (function(d, s, id) {   var js, fjs = d.getElementsByTagName(s)[0];   if (d.getElementById(id)) return;   js = d.createElement(s); js.id = id;   js.src = “https://connect.facebook.net/en_US/sdk.js&#34;;   fjs.parentNode.insertBefore(js, fjs);   }(document, ‘script’, ‘facebook-jssdk’));window.fbAsyncInit = function () {  window.FB.init({  appId: facebook.appId,  cookie: true,  xfbml: true,  version: ‘v2.8’ });};}
</span></code></pre></div><p>Facebook developers sitesi üzerinde bulunan örnek
<a href="https://developers.facebook.com/docs/facebook-login/web" target="_blank" rel="noopener noreffer">kod</a> sayfanın
alt kısmında bulunmaktadır.</p>
<p>Kolay Gelsin.. 🤞</p>
]]></description>
</item><item>
    <title>Vue.js</title>
    <link>http://www.arifpehlivan.com/posts/vuejs/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>http://www.arifpehlivan.com/posts/vuejs/</guid>
    <description><![CDATA[<p>Merhabalar bu yazımda Vue.js den bahsedeceğim. Vue.js web arayüzleri
oluşturmak için geliştirilen bir JavaScript kütüphanesidir. Evan You
tarafından geliştirilmeye başlanmıştır. Benzerlerinin aksine öğrenimi
kolay ve basittir. Ayrıca moduler yapı oluşturmak için alt yapıya
sahiptir.</p>
<h4 id="neden-vue-js-i-kullanalım">Neden Vue.js i kullanalım?</h4>
<p>JavaScript’in kolayca yazılabilmesine olanak sağlamaktadır. Vue.js ile
başlamak son derece kolaydır. Dokümantasyonları sayesinde öğrenimi kolay
ve kaynak kodu oldukça fazladır. Dış kütüphanelere ihtiyacınız yoktur.
JQuery olmadan da kullanabilirsiniz. Pek çok eklenti olmasına rağmen
herhangi bir eklenti kurmanıza gerek kalmamaktadır. Ayrıca Github veya
web üzerinde örnek projeler ve yazılar oldukça fazladır.</p>
<h4 id="vue-js-vs-diğer-frameworkler">Vue.js vs Diğer Frameworkler</h4>
<p>Angular : – Vue.js API ve Tasarım açısından Angular’a göre daha
kolaydır. Hızlı bir şekilde öğrenip, kolayca uygulama geliştirmeye
başlayabiliyorsunuz. – Vue.js Angular’a göre daha esnek bir yapıdadır.
Angular gibi her şeyi onun istediği gibi yapmanızı isteyen, içerisinde
belki kullanmayacağınız onlarca özellik olan bir yapı değil. Vue’da
interface katmanı bulunuyor. Böylelikle kullanmadığınız özellikler
yüzünden projeniz büyümüyor.</p>
<p>React : – React’a nazaran vue.js ile çalışmak daha basit ve kolaydır. –
Bir çok benzerlikleri bulunmaktadır.</p>
<p>Daha detaylı karşılaştırmaları görmek için bu link’etıklayabilirsiniz.</p>
<p>Sonuç olarak öğrenimi kolay ve basit olan bir framework ile hızlıca
projeler geliştirebilir ve güzel sonuçlar alabilirsiniz. Örnek modüler
bir proje yapısı isterseniz Github adresimden forklayabilirsiniz. Yada
<a href="https://github.com/mrpehlivan/vue-2.0-boilerplate" target="_blank" rel="noopener noreffer">buradan</a> direk
erişebilirsiniz.</p>
<p>Yardımcı olabilecek linkler :<br>
Vue.js : <a href="https://vuejs.org/" target="_blank" rel="noopener noreffer">https://vuejs.org/</a><br>
Awesome Vue :
<a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener noreffer">https://github.com/vuejs/awesome-vue</a></p>
<p>Kolay Gelsin.. 🤞</p>
]]></description>
</item></channel>
</rss>
